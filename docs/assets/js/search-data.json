[{"doc":"This page has not yet sprouted","title":"This page has not yet sprouted","hpath":"403","content":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","url":"https://unread.parthshah.ml/notes\\403.html","relUrl":"notes\\403.html"},{"doc":"Root","title":"Root","hpath":"root","content":"# Welcome to Dendron\n\nThis is the root of your dendron vault. If you decide to publish your entire vault, this will be your landing page. You are free to customize any part of this page except the frontmatter on top. \n","url":"https://unread.parthshah.ml","relUrl":"/"},{"doc":"Courses","title":"Courses","hpath":"courses","content":"\n","url":"https://unread.parthshah.ml/notes\\9MM7YZXp6aLHpfrPgwfil.html","relUrl":"notes\\9MM7YZXp6aLHpfrPgwfil.html"},{"doc":"Sem5","title":"Sem5","hpath":"courses.sem5","content":"\n","url":"https://unread.parthshah.ml/notes\\h9FhyD7JWCWOcmTkZ9uFF.html","relUrl":"notes\\h9FhyD7JWCWOcmTkZ9uFF.html"},{"doc":"Sensors","title":"Sensors","hpath":"courses.sem5.sensors","content":"\n","url":"https://unread.parthshah.ml/notes\\yPXvh3M5jxi9yT7HzKDWe.html","relUrl":"notes\\yPXvh3M5jxi9yT7HzKDWe.html"},{"doc":"Sensors - Notes","title":"Sensors - Notes","hpath":"courses.sem5.sensors.notes","content":"","url":"https://unread.parthshah.ml/notes\\M4gW25htahJW9QKmSUriJ.html","relUrl":"notes\\M4gW25htahJW9QKmSUriJ.html"},{"doc":"L9 - Arduino Digital Read Function","title":"L9 - Arduino Digital Read Function","hpath":"courses.sem5.sensors.notes.l9","content":"## Digital Read Function\n\n* One pole two way switch \n* One contact is connected to +5 Volts and other is connected to ground \n* x=digitalRead(Inpin)\n\n```arduino\nint inPin=2;\nvoid setup()\n{\npinMode(12, OUTPUT);\npinMode(inpin, INPUT);\n}\nvoid loop()\n{\n    if(digitalRead(inPin)==HIGH)\n    {\n        digitalWrite(12,HIGH);\n        delay(1000);\n        digitalWrite(12,LOW);\n        delay(1000);\n    }\n}\n```\n# Summary \n_digitalRead is used instead of digitalWrite - if condition to check if digitalRead gets HIGH - loop over digitalWrite_","url":"https://unread.parthshah.ml/notes\\Ljd0Ep11nrBiHDcJI9V69.html","relUrl":"notes\\Ljd0Ep11nrBiHDcJI9V69.html"},{"doc":"L8 - TinkerCAD Simulator","title":"L8 - TinkerCAD Simulator","hpath":"courses.sem5.sensors.notes.l8","content":"\n## LTSpice vs TinkerCAD\r\n\r\n| LTSpice                      | TinkerCAD                             |\r\n| ---------------------------- | ------------------------------------- |\r\n| Good circuit schematics      | Components resemble actual components |\r\n| Good for analog circuit sims | Good for digital circuit sims         |\r\n|                              | Can do analog with limitations        |\r\n\r\n## [Test Circuit](https://www.tinkercad.com/things/d0Tnm2H6i51-sizzling-stantia-fulffy/editel?sharecode=G3ztTDdzkVpnYhFus6uF-L0eXXYZGvLenR_-OV9rzm8)\r\n ","url":"https://unread.parthshah.ml/notes\\WOIw69KWfh9Lk5F5gtTDk.html","relUrl":"notes\\WOIw69KWfh9Lk5F5gtTDk.html"},{"doc":"L7 -  Arduino interfacing","title":"L7 -  Arduino interfacing","hpath":"courses.sem5.sensors.notes.l7","content":"## Download the Arduino IDE \n* [Check this link](https://www.arduino.cc/en/software)\n## Things to check \n* Go to tools\n  * Board - Arduino Uno \n  * Port - COM18\n\n## Upload code on board\n* Sketch -> Upload on Arduino board ","url":"https://unread.parthshah.ml/notes\\YNHuJIcu7w68UGo1kAFrN.html","relUrl":"notes\\YNHuJIcu7w68UGo1kAFrN.html"},{"doc":"L6 - Computerized measurement and control systems","title":"L6 - Computerized measurement and control systems","hpath":"courses.sem5.sensors.notes.l6","content":"\n## Development of a control board software\n* The program is written on a general purpose computer and then uploaded on a control board\n* Arduino is a control board that connects to a general purpose computer using the USB Connector \n \n## I/O pins of the Arduino (usually)\n*  Analog input (6 pins)\n   *  Any value between Vmin to Vmax\n   *  0 **to** 5 volts\n* Digital Pins (14)\n  * Input 0 **or** 5 volts (Logically 0 or 1)\n  * Output 0 **or** 5 volts \n  * Pulse Width Modulation (PWM) output (6 of the 14 pins)\n    * As no analog output is available, average of PWM is considered as analog output\n\n## Analog to Digital Converter (ADC)\n* Analog to multibit binary number\n* For arduino: 10 bit binary number\n* 0 volts is 0000000000 or decimal 0 \n* 5 volts is 1111111111 or decimal 1023\n  * Other values are calculated using the linear relationship of ADC\n\n## Sampling rate of ADC in Arduino\n* **Sampling rate = 9650 samples/sec**\n* Max theoretical frequency of input analog is half of this \n  * _Relation with the Nquist rate and doing otherwise causes aliasing of the signal_\n* Boards like temperature sensor can be used for processing as they have low frequency\n\n## (Imp) PWM Waveform \n* Pulse waveform whose duty cycle can be controlled using a program \n* $$ \\text{Duty Cycle}= \n    {T{\\scriptscriptstyle w}\\over{T}}*100\\%\n$$ \nWhere Tw is the time when the pulse remains high and T is the total time period \n* $$\n  \\text{Average Value}={\\text{Peak value}*T\\scriptscriptstyle{w}\\over{T}}\n  $$ \n  Area divided by Time period is average value\n* Frequency = 1/T = 480Hz\n* But why do this in the first place\n  * If you can control the duty cycle, you can control the average value \n* The DC motor would respond to the average value (as it has a slow transient response) as it does not change fast \n  * Thus, the speed of motor is changed by changing the average value; which was changed by changing the duty cycle of the PWM waveform \n* PWM : Duty cycle \n  * **0% is 00000000 or 0** \n  * **100% is 11111111 or 255**\n## Program structure \n1. Declarations \n2. void setup()\n3. void setup()\n\n## Example of a Program (Blinking LED)\n* Turn on for 1 sec and turn off for 1 sec \n* We can use digital pin, pin 13 of the arduino \n```arduino\n//LED on Digital pin 13\nint ledPin=13;\nvoid setup()\n{\n  //sets pin 13 as output\n  pinMode(ledPin,OUTPUT);\n}\nvoid loop()\n{\n  // Make 13 Pin as HIGH\n  digitalWrite(ledPin, HIGH);\n  // Delay of 1000 milliseconds\n  delay(1000);\n  //Make 13 pin as LOW\n  digitalWrite(ledPin, LOW);\n  //Delay of 1000 milliseconds\n  delay(1000);\n}\n```\n# Summary \n\n_Arduino's I/O pins - 6 analog pins - 14 digital pins (with 6 pins for PWM or Pulse Width Modulation) - ADC converts Analog input to Multibit binary number - 10 bit binary number for Arduino - 0 to 1023 - Sampling rate is 9650 samples/sec for Arduino - Duty cycle can be controlled - Tw/T ratio - Average value is Peak*Duty cycle ratio - 0 to 255 - Program structure is declaration+setup+loop_","url":"https://unread.parthshah.ml/notes\\gbYfp4nQC66bL3Z4v0V9d.html","relUrl":"notes\\gbYfp4nQC66bL3Z4v0V9d.html"},{"doc":"L5 - More specifications for measurement systems","title":"L5 - More specifications for measurement systems","hpath":"courses.sem5.sensors.notes.l5","content":"\n## Accuracy vs Precision\n* Degree of reproducibility of a measurement is precision\n* Conformity of measurement is accuracy \n* Instrument is precise when multiple values are close to one another (not ensured that any of them is closer to the True value)\n  \n**An instrument that is accurate and precise is desired**\n## What is Resolution? \n* Resolution can be quantified by considering smallest measurable increment\n* 1mV min voltmeter has more resolution than min value of 10mV even if the max value is same for both \n## What is Span and Range? \n* Span is the linear operating range\n* Temperature transducer has linear relation between 0-150 degrees\n* Range is all measurable values\n* Linearity is confirmity to an ideal linear calibration\n\n_Span is the child of Range_\n\n* Deviation from linearity over a specified range is **non linearityy**\n  \n## Best fit line\n* Practical sensor always has some non linearity; and thus the best fit line is found by the manufacturer to form an equation\n* Best fit line is _linearization_ of the sensor\n* Least square method: \n    $$y=mx+b\n   $$\n   * x and y are taken as average of the given data points\n   * m and b are further calculated\n      $$ m= {\\varSigma(x{\\scriptscriptstyle i}-\\overline{X})(y{\\scriptscriptstyle i}-\\overline{Y})\\over{\\varSigma(x{\\scriptscriptstyle i}-\\overline{X})^2}}\n    $$\n    \n    for values 1 to n\n    * b can be found by \n   $$ b=\\overline{Y}-m\\overline{X}\n     $$\n\n## Worst case - Max deviation\n* Max deviation=Max $$|y{\\scriptscriptstyle mi}-y{\\scriptscriptstyle fi}|$$ where ym is measured and yf is on the best fit line\n## Most likely deviation \n_Another way of quantifying the non linearity_\n$$ MLD=\\sqrt{{\\displaystyle\\sum_{i=1}^{n\\scriptscriptstyle x}(x{\\scriptscriptstyle li}-x{\\scriptscriptstyle l})^2}\\over{n{\\scriptscriptstyle x}-2 }}\n  $$\n### Why use n-2? \n  * Measured values are mean of samples and not true values\n  * Two variables: x and y; thus n-2 (ikr, does not make a lot of sense)\n\nThis is very similar to Standard Deviation \n![[courses.sem5.sensors.notes.l4#standard-error:#summary]]\n\n# Summary \n_Precision is reproducibility while accuracy is confirmity - Resolution is the min increment - Span is the linear range; range accounts for everythig possible - Deviation from linearity is non linearity - Best fit line is linearization done by y=mx+b, where m=sigma(x-xmean)(y-ymean)/(x-xmean)(x-xmean) - Worst case max deviation is max(y measured-y line) - most likely deviation is sd formula but n-2 instead of n-1 - n-2 as both x and y exist_","url":"https://unread.parthshah.ml/notes\\JUSf11k5hrRnjgOjxiI4p.html","relUrl":"notes\\JUSf11k5hrRnjgOjxiI4p.html"},{"doc":"L4 - Errors in measurements","title":"L4 - Errors in measurements","hpath":"courses.sem5.sensors.notes.l4","content":"\n## What is error?\n* Difference between measured and the true value\n* Usually in percentage\n$$\nErr=(Measured-True)*100/True\n$$\n* Accuracy is the confirmity of the measurement of the true value\n## What is a True value? \n* True value that is measured by the instrument without error \n* But this does not exist\n* But, highly accurate primary standards are available; but they are rare and expensive\n* Less accurate secondary standard are available\n* **Working standards** are used in industries \n## Calibration procedure\n![](CalibrationProcedure.png)\n* Source => mesaurement with Instrument under test and working standard simualtaneously\n* Check if the error is tolerable\n* Test over the entire full scale (ideally infinite)\n* Validate the accuracy\n## Types of Measurement errors\n* Systematic errors\n  * Due to instrument inaccuracies\n    * The error is usually consistent\n  * Faulty design of an experiment \n    * You have to put a filter and there is a problem with filter gain \n  * These errors are repeatable \n\n* Random errors\n  * Human error\n    * You read _1.23V instead of 1.32V _\n    * This is going to be quite random \n\n  * Noise \n    * This is quite random too\n  * These errors are not repeatable\n\n![](ErrorDistribution.png)\n\n## How to tackle errors? \n* Take many values and average to reduce the effect of random errors\n\n## Standard error\n* Likely discrepancy in sample mean and population mean \n* Standard deviation measures dispersion to the data set relative to its mean \n  $$ SD=\\sqrt{{\\displaystyle\\sum_{i=1}^{n\\scriptscriptstyle x}(x{\\scriptscriptstyle li}-x{\\scriptscriptstyle l})^2}\\over{n{\\scriptscriptstyle x}-1 }}\n  $$\n\n* Divided by nx-1 as we are taking finite readings, x1 is not a true mean but an estimate\n* Standard error is proportional to SD\n* Larger the n, lower the SD, closer is the mean to it's true value \n* $$\nSE=SD/{\\sqrt{n{\\scriptscriptstyle x}}}\n$$ \nWhere nx is the number of readings that you have taken  \n\n# Summary \n _Error is the difference between measured and true value - True value is measured without error (primary, secondary and working standards) - Source measured simultaneously under working standard and instrument under test to validate accuracy - Systematic errors (Inst inaccuracies, faulty design, repeatable) and Random errors (Human error, noise and not repeatable) are the types of errors - Errors are tackled by calculating the mean of many values - Standard error gives likely discrepancy - Related to SD (root(sigma(xli-xl)^2)/(nx-1)), nx-1 in SD as xl is not the true mean - SE=SD/root(nx)_","url":"https://unread.parthshah.ml/notes\\S7hzPUgSE9dC5ARCuwnan.html","relUrl":"notes\\S7hzPUgSE9dC5ARCuwnan.html"},{"doc":"L1","title":"L1","hpath":"courses.sem5.sensors.notes.l1","content":"\nThis is a test file","url":"https://unread.parthshah.ml/notes\\7ovYrMnf5EuGJZv75nxNv.html","relUrl":"notes\\7ovYrMnf5EuGJZv75nxNv.html"},{"doc":"Changelog","title":"Changelog","hpath":"root.changelog","content":"","url":"https://unread.parthshah.ml/notes\\changelog.html","relUrl":"notes\\changelog.html"}]
